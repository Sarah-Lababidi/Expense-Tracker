{"version":3,"sources":["context/AppReducer.js","context/GlobalState.js","components/Info.js","components/TransactionForm.js","components/TransactionsList.js","App.js","reportWebVitals.js","index.js"],"names":["AppReducer","state","action","type","transactions","payload","filter","trans","id","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","addTransaction","transaction","deleteTransaction","Info","amounts","useContext","map","incomeAmount","item","expenseAmount","income","length","reduce","acc","toFixed","expense","balance","sign","className","Math","abs","TransactionForm","useState","setText","setAmount","err","isNaN","Number","replaceAll","onSubmit","e","preventDefault","transAmount","parseFloat","newTrans","row","htmlFor","onChange","target","required","invalid","valid","disabled","Transaction","onClick","TransactionsList","renderAllTrans","classes","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.398f6e9b.chunk.js","sourcesContent":["const AppReducer = (state, action) => {\r\n    switch(action.type){\r\n        case \"ADD_TRANSACTION\":\r\n            return {\r\n                ...state ,transactions: [ ...state.transactions, action.payload]\r\n            }\r\n        case \"DELETE_TRANSACTION\":\r\n            return {\r\n                transactions: state.transactions.filter( trans => trans.id !== action.payload)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AppReducer;","import React, { createContext, useReducer } from 'react';\r\nimport AppReducer from './AppReducer'\r\n\r\nconst initialState = {\r\n    transactions: [{\r\n        id: 0,\r\n        text: \"books\",\r\n        amount: -100.0\r\n    },\r\n    {\r\n        id: 1,\r\n        text: \"food\",\r\n        amount: -200.0\r\n    },\r\n    {\r\n        id: 2,\r\n        text: \"salary\",\r\n        amount: 500.0\r\n    }\r\n    ]\r\n}\r\n\r\nexport const GlobalContext = createContext(initialState);\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: \"ADD_TRANSACTION\",\r\n            payload: transaction\r\n        })\r\n    }\r\n\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            payload: id\r\n        })\r\n    }\r\n\r\n    return (\r\n    < GlobalContext.Provider value={\r\n        {\r\n            transactions: state.transactions,\r\n            addTransaction,\r\n            deleteTransaction\r\n        }\r\n    } >\r\n         { children}\r\n          </GlobalContext.Provider>\r\n    );\r\n}","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\n\r\nfunction Info() {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const amounts = transactions.map( trans => trans.amount);\r\n    const incomeAmount = amounts.filter( item => item >0);\r\n    const expenseAmount = amounts.filter( item => item <=0);\r\n    const income = incomeAmount.length>0 ? incomeAmount.reduce((acc, item) => acc + item, 0).toFixed(2) : 0;\r\n    const expense = expenseAmount.length>0 ? expenseAmount.reduce((acc, item) => acc + item, 0).toFixed(2) : 0; \r\n    const balance = amounts.length>0 ? amounts.reduce((acc, item) => acc + item, 0).toFixed(2): 0;\r\n    let sign = \"\";\r\n    if(balance>0)\r\n        sign = \"+\";\r\n    else if(balance<0)\r\n        sign = \"-\";  \r\n    return (\r\n        <div className=\"text-center font-weight-bold text-uppercase mb-3\">\r\n            <div className=\"balance\">\r\n                <p className=\"mb-1\">Your Balance</p>\r\n                <p>{sign}$<span>{Math.abs(balance)}</span></p>\r\n            </div>\r\n            <div className=\"w-50 mx-auto d-flex p-2 bg-white rounded justify-content-center text-capitalize\">\r\n                <div className=\"income border-right px-3 mx-0 border-right\">\r\n                    <p className=\"mb-1\">Income</p>\r\n                    <p className=\"text-success\">{income>0?\"+\":\"\"}$<span>{income}</span></p>\r\n                </div>\r\n                <div className=\"expense px-3 mx-0\">\r\n                    <p className=\"mb-1\">Expenses</p>\r\n                    <p className=\"text-danger\">{expense<0?\"-\":\"\"}$<span>{Math.abs(expense)}</span></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Info;","import React, { useContext, useState } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState';\r\nimport { Form, FormGroup, FormFeedback, Button, Label, Input } from 'reactstrap';\r\n\r\nfunction TransactionForm() {\r\n    const { addTransaction, transactions } = useContext(GlobalContext);\r\n    const [text, setText] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (err) return false;\r\n        let transAmount = 0;\r\n        transAmount = Number(parseFloat(amount.replaceAll(\",\", \"\")).toFixed(2));\r\n        const newTrans = {\r\n            id: transactions.length > 0 ? transactions[transactions.length - 1].id + 1 : 0,\r\n            text,\r\n            amount: transAmount\r\n        }\r\n        addTransaction(newTrans);\r\n        setText('');\r\n        setAmount('');\r\n    }\r\n    const validate = () => {\r\n        if (amount) {\r\n            const isNum = !isNaN(Number(amount.replaceAll(\",\", \"\")))? \"\" : \"Please enter a number\";\r\n            return isNum;\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n    let err = validate()\r\n    return (\r\n        <Form onSubmit={handleSubmit} className=\"font-weight-bold w-75 mx-auto\">\r\n            <h5 className=\"text-center mb-0 font-weight-bold\">Add A New Transaction</h5>\r\n            <hr className=\"mt-1 mb-3\" />\r\n            <FormGroup row>\r\n                <Label htmlFor=\"text\">Text</Label>\r\n                <Input type=\"text\" value={text}  onChange={(e) => setText(e.target.value)} className=\"form-control\" required />\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <Label htmlFor=\"amount\">Amount <br /> (negative-expense, positive-income)</Label>\r\n                <Input type=\"text\" className=\"form-control\" value={amount} onChange={(e) => setAmount(e.target.value)} \r\n                    invalid={err !== \"\" && amount !== \"\"} valid={err === \"\" && amount !== \"\"} required />\r\n                <FormFeedback invalid>{err}</FormFeedback>\r\n            </FormGroup>\r\n            <FormGroup row>\r\n                <Button type=\"submit\" className=\"btn btn-dark w-100\" disabled={err!==\"\"}>Add Transaction</Button>\r\n            </FormGroup>\r\n        </Form>\r\n    );\r\n}\r\nexport default TransactionForm;","import React, { useContext } from 'react';\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport '../App.css'\r\n\r\nfunction Transaction({ transaction }) {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n    const sign = transaction.amount > 0 ? '+' : '-';\r\n    return (\r\n        <div>\r\n            <span><button onClick={()=>deleteTransaction(transaction.id)} id=\"delete-btn\" className=\"btn btn-danger py-2 px-3\">X</button></span>\r\n            <span className=\"py-2 px-3 d-inline-block text-capitalize\">{transaction.text}</span>\r\n            <span className=\"float-right py-2 px-3\"> {sign}${Math.abs(transaction.amount)}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction TransactionsList() {\r\n    const { transactions } = useContext(GlobalContext);\r\n    const renderAllTrans = transactions.map(trans => {\r\n        const classes = \"list-group-item my-1 p-0 \" + (trans.amount > 0 ? 'plus' : 'minus');\r\n        return (\r\n            <li key={trans.id} className={classes}>\r\n                <Transaction transaction={trans} />\r\n            </li>\r\n        );\r\n    })\r\n    return (\r\n        <div id=\"transList\" className=\"w-75 mx-auto\">\r\n            <h5 className=\"text-center font-weight-bold\">History</h5>\r\n            <hr className=\"mt-1 mb-4\" />\r\n            <ul className=\"list-group\">\r\n                {renderAllTrans}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\nexport default TransactionsList;","import './App.css';\nimport Info from './components/Info';\nimport TransactionForm from './components/TransactionForm';\nimport TransactionsList from './components/TransactionsList';\n\nimport { GlobalProvider } from './context/GlobalState'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <div className=\"container\">\n        <header className=\"text-center my-3\">\n          <h1>Expense Tracker</h1>\n        </header>\n        <div className=\"row mt-5\">\n          <div className=\"col-12 col-md-6\">\n            <Info />\n            <TransactionsList />\n          </div>\n          <div className=\"col-12 col-md-6 my-4 mt-my-0 border-left\">\n            <TransactionForm />\n          </div>\n        </div>\n      </div>\n    </GlobalProvider>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}